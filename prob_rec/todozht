todo 9
去掉‘费用分组’
删除表c_fee_group，c_fee去掉fee_group_id字段
todo 10 to dh
func:‘费用报表结构’
从c_rpt,c_rpt_item,c_rpt_fee三个表中返回指定的费用报表结构,三层关联表
接收参数：
{
    func: '费用报表结构',
    ex_parm: {
        'rptid':'xxx' //费用报表id int型
    }
}
查询：
    select id,item_name from c_rpt_item where rpt_id = xxx order by sort_no
    for item in itemlist
        select c_rpt_fee.fee_id,c_fee.fee_name from c_rtp_fee,c_fee
         where c_rpt_fee.rpt_id = xxx and c_rpt_fee.item_id = item.id
           and c_rpt_fee.fee_id = c_fee.id
        将item.item_name写入一级表头title
        for fee in feelist
            写入二级表头field,title
返回参数：
{
    "msg":"", #成功‘’，失败返回错误信息
    "stateCod": "001",   #  有数据‘001’ 无数据‘201’
    "error": ["xxx", "xx"]...        # 错误数组。
    "result": [
        [{"title": "包干费", "colspan": 1}]  #一级表头,title-对应表字段c_rpt_item.item_name,colspan-包含的费用数量
        [{"field": "fee_id", "title": "费用名称", "align": "right"},
        ....

        ] #二级表头 fee_id-对应表字段 c_rpt_fee.fee_id 字符型
     ] #返回报表结构 双层表头
}
测试数据：
接收参数：
{
    "func": '费用报表结构',
    "ex_parm": {
        'rptid':1 #费用报表id int型
    }
}
返回参数：
{
    "msg": "成功",
    "stateCod": "001",
    "error": [],
    "result": [
        [
            {"title": "包干费", "colspan": 1},
            {"title": "海关费用", "colspan": 2},
            {"title": "商检费用","colspan":2},
            {"title":"码头费用","colspan":3}
        ],
        [
            {"field": "1", "title": "包干费", "align": "right"},
            {"field": "5", "title": "海关验货费", "align": "right"},
            {"field": "11", "title": "滞报金", "align": "right"},
            {"field": "7", "title": "商检熏蒸场地费", "align": "right"},
            {"field": "8", "title": "商检熏蒸拖车费", "align": "right"},
            {"field": "2", "title": "码头超期费", "align": "right"},
            {"field": "3", "title": "码头堆存费", "align": "right"},
            {"field": "4", "title": "码头搬移费", "align": "right"}
        ]
            ]
}
todo 11 to dh
func: '客户费用明细报表'
接收参数：
{
    func:'客户费用明细报表',
    ex_parm:{
        client_id: 客户ID,
        fee_typ:费用类型,
        begin_tim: 开始日期,  #date型
        end_tim: 截止日期,    #date型
        rpt: 报表id
    }
}
查询：参考这个sql
select c.bill_no,sum(case p.fee_cod when 1 then amount else 0 end) baogan,sum(case p.fee_cod when 2 then amount else 0 end) chaoqi,
        sum(case p.fee_cod when 3 then amount else 0 end) duicun,sum(case p.fee_cod when 4 then amount else 0 end) banyi,
        sum(case p.fee_cod when 5 then amount else 0 end) yanhuo,sum(case p.fee_cod when 6 then amount else 0 end) xunzheng,
        sum(case p.fee_cod when 7 then amount else 0 end) changdi,sum(case p.fee_cod when 8 then amount else 0 end) tuoche,
        sum(case p.fee_cod when 11 then amount else 0 end) zhibao,
        sum(case p.fee_cod in(1,2,3,4,5,6,7,8,11) when true then 0 else amount end) qita
        from pre_fee as p,contract as c
        where  p.client_id = %s and p.fee_typ = %s and p.ex_feeid = 'O'
        and (p.fee_financial_tim between %s and %s)
        and p.contract_id = c.id
        group by c.bill_no

根据传入的报表id，找出这个报表下的所有费用名称，拼出select的列，行变列查询，列名变为字符型的feeid
返回通用的查询结构