todo 12 to dh
func:'协议模式结构查询'
接收参数接口：{
    func: '协议模式结构查询',
    reqtype: 'query',
    ex_parm: {
        modid: 'XXX' //模式id
    }
}
过程：
新建数组D，作为返回对象数组,数组内对象
{
    title:'字段标题',
    field:'fee_elen', //n为1-10
    align: 'right', //写死
    halign: 'center',   //写死
    sortable: true,//写死
    editor:{}
}


根据传入的modid,查询出记录A，
select * from p_fee_mod where id = 'XXX';
记录A中col_1到col_10这10个字段中的非空值组成集合B，

for mod in B
    select * from p_fee_ele where id = mod
    取p_fee_ele.ele_name作为返回结构'title'
    根据col_[n]中的n,作为返回结构'field'，格式'fee_elen'
    select * from p_fee_ele_lov where ele_id = mod  的集合C
    if C == 空
        返回结构的editor: {'type': 'text'}
    else
        返回结构的editor:{
            'type':'combobox',
            'options':{
                'textField': 'text',
                'valueField': 'value',
                'data': [{'text': C.lov_name, 'value': C.id},{},{},.....],
            }
        }

返回参数接口：
{
    "msg":"查询成功",
    "stateCod": "001",   #  错误 < 0 > 正确--不弹出提示框--100--中心弹出提示--200--右下弹出提示--300
    "error": ["xxx", "xx"]...        # 错误数组。
    "rows":数组D
}
todo 13 to dh
协议模式定义自解析
一、元素定义
   {n}：传入参数,n>=0
   [n]：p_protocol_rat中的fee_elen字段, 1<=n<=10
二、操作符
   == != > >= < <= between

三、逻辑关系
   and or
四、过程
   1.select * from p_protocol_rat where protocol_id = '' and fee_id = '' and mod_id = ''  得集合A
   2.从业务表中查询得到要进行比较的业务数据，得集合B

   3.调用自定义解析，传入参数(A,B)进行处理
        select mod_descript from p_fee_mod where id = ''
        根据传入参数，解析执行 mod_descript ,集合A中有符合条件的返回 (A.fee_rat - A.discount_rat),没有返回null

   1和2在自解析外执行
五、返回处理
   在自定义解析外对返回进行处理，例如是执行其他模式，还是报错退出。
六、例子
   传入的第一个参数等于p_protocol_rat.fee_ele1的值，并且传入的第二个参数大于p_protocol_rat.fee_ele2的值
   {1} == [1] and {2} > [2]

